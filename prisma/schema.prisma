// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique @map("session_token")
  userId       String   @map("user_id")
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
 
  @@map("sessions")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map("email_verified")
  sessions      Session[]
  order         Order[]
 
  @@map("users")
}
 
model VerificationToken {
  identifier String
  token      String
  expires    DateTime
 
  @@unique([identifier, token])
  @@map("verificationtokens")
}

model Order {
  id              String     @id @default(cuid())
  orderDate       DateTime   @default(now())
  orderedProducts OrderedProduct[]
  productCount  Int
  totalCost     Int
  totalSavings  Int?
  userId        String?   @map("user_id")
  user          User?     @relation(fields: [userId], references: [id])
  guestName     String?
  guestEmail    String?
  addressLine1  String
  addressLine2  String?
  city          String
  province      String
  postalCode    String

  @@map("orders")
}

model OrderedProduct {
  id            String    @id
  name          String
  regularPrice  Int
  salePrice     Int?
  image         String
  quantity      Int
  order         Order[]
  selectedSize  String?
  @@map("products")
}